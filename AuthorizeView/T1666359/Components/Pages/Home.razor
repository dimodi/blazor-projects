@page "/"

<PageTitle>Home</PageTitle>

@inject AuthenticationStateProvider AuthenticationStateProvider

<TelerikButton OnClick="@SignIn">Sign In</TelerikButton>
<TelerikButton OnClick="@SignOut">Sign Out</TelerikButton>

<AuthorizeView>
    <Authorized>
        <p style="color:green">Authorized as @context.User.Identity?.Name</p>
    </Authorized>
    <NotAuthorized>
        <p style="color:blue">Not authorized</p>
    </NotAuthorized>
</AuthorizeView>

<h3>AuthorizeView manages only the Price column</h3>

<TelerikGrid Data="@GridData" ShowColumnMenu="true">
    <GridColumns>
        <GridColumn Field="@nameof(SampleModel.Name)" />
        <AuthorizeView>
            <Authorized>
                <GridColumn Field="@nameof(SampleModel.Price)">
                    <HeaderTemplate>
                        <strong style="color:red">Price</strong>
                    </HeaderTemplate>
                </GridColumn>
            </Authorized>
        </AuthorizeView>
        <GridColumn Field="@nameof(SampleModel.Quantity)" />
    </GridColumns>
</TelerikGrid>

<h3>AuthorizeView manages all columns</h3>

<TelerikGrid Data="@GridData" ShowColumnMenu="true">
    <GridColumns>
        <AuthorizeView>
            <Authorized>
                <GridColumn Field="@nameof(SampleModel.Name)" />
                <GridColumn Field="@nameof(SampleModel.Price)">
                    <HeaderTemplate>
                        <strong style="color:red">Price</strong>
                    </HeaderTemplate>
                </GridColumn>
                <GridColumn Field="@nameof(SampleModel.Quantity)" />
            </Authorized>
            <NotAuthorized>
                <GridColumn Field="@nameof(SampleModel.Name)" />
                <GridColumn Field="@nameof(SampleModel.Quantity)" />
            </NotAuthorized>
        </AuthorizeView>
    </GridColumns>
</TelerikGrid>

<h3>Price Column depends on its Visible parameter</h3>

<TelerikGrid Data="@GridData" ShowColumnMenu="true">
    <GridColumns>
        <GridColumn Field="@nameof(SampleModel.Name)" />
        <GridColumn Field="@nameof(SampleModel.Price)" Visible="@IsUserSignedIn" VisibleInColumnChooser="@IsUserSignedIn">
            <HeaderTemplate>
                <strong style="color:red">Price</strong>
            </HeaderTemplate>
        </GridColumn>
        <GridColumn Field="@nameof(SampleModel.Quantity)" />
    </GridColumns>
</TelerikGrid>

@code {
    private List<SampleModel> GridData { get; set; } = new();

    private bool IsUserSignedIn => ((CustomAuthStateProvider)AuthenticationStateProvider).GetAuthenticationStateAsync().Result.User.Identity?.Name == "elevatedGridUser";

    private void SignIn()
    {
        ((CustomAuthStateProvider)AuthenticationStateProvider)
            .SignIn("elevatedGridUser");
    }

    private void SignOut()
    {
        ((CustomAuthStateProvider)AuthenticationStateProvider)
            .SignOut();
    }

    protected override void OnInitialized()
    {
        for (int i = 1; i <= 3; i++)
        {
            GridData.Add(new SampleModel()
            {
                Id = i,
                Name = $"Name {i}",
                Price = Random.Shared.Next(1, 100) * 1.23m,
                Quantity = Random.Shared.Next(0, 1000)
            });
        }
    }

    public class SampleModel
    {
        public int Id { get; set; }
        public string Name { get; set; } = string.Empty;
        public decimal Price { get; set; }
        public int Quantity { get; set; }
    }
}

@page "/drawer"

<TelerikButton OnClick="@ToggleDrawer" Icon="@SvgIcon.Menu"></TelerikButton>

<TelerikDrawer @ref="@DrawerRef"
               Data="@DrawerData"
               @bind-Expanded="@DrawerExpanded"
               Mode="@DrawerMode.Push"
               MiniMode="true">
    <DrawerContent>
        <p>
            Current Drawer state:
            <strong>@(DrawerExpanded ? "Expanded" : "Mini")</strong>
        </p>
    </DrawerContent>
</TelerikDrawer>

@code {
    private TelerikDrawer<DrawerItem>? DrawerRef { get; set; }

    private bool DrawerExpanded { get; set; } = true;

    private IEnumerable<DrawerItem> DrawerData { get; set; } = new List<DrawerItem> {
        new DrawerItem { Text = "Inbox", Icon = SvgIcon.Inbox },
        new DrawerItem { Separator = true},
        new DrawerItem { Text = "Notifications", Icon = SvgIcon.Bell },
        new DrawerItem { Text = "Calendar", Icon = SvgIcon.Calendar },
        new DrawerItem { Separator = true},
        new DrawerItem { Text = "Attachments", Icon = SvgIcon.EnvelopeLink },
        new DrawerItem { Text = "Favourites", Icon = SvgIcon.StarOutline }
    };

    private async Task ToggleDrawer()
    {
        if (DrawerRef != null)
        {
            await DrawerRef.ToggleAsync();
        }
    }

    public class DrawerItem
    {
        public string Text { get; set; } = string.Empty;

        public object? Icon { get; set; }

        public bool Separator { get; set; }
    }
}

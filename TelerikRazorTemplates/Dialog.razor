<TelerikButton OnClick="@( () => DialogVisible = true )">Show Dialog</TelerikButton>

<TelerikButton OnClick="@OnDialogFactoryButtonClick">Show DialogFactory Alert</TelerikButton>

<TelerikDialog @bind-Visible="@DialogVisible"
               Width="300px"
               ShowCloseButton="true"
               CloseOnOverlayClick="true"
               ButtonsLayout="@DialogButtonsLayout.End">
    <DialogTitle>
        Dialog Title
    </DialogTitle>
    <DialogContent>
        <p>Dialog Content</p>
    </DialogContent>
    <DialogButtons>
        <TelerikButton OnClick="@( () => OnDialogButtonClick(true) )"
                       ThemeColor="@ThemeConstants.Button.ThemeColor.Success">OK</TelerikButton>
        <TelerikButton OnClick="@( () => OnDialogButtonClick(false) )"
                       ThemeColor="@ThemeConstants.Button.ThemeColor.Error">Cancel</TelerikButton>
    </DialogButtons>
</TelerikDialog>

@code {
    [CascadingParameter]
    public DialogFactory? TelerikDialogs { get; set; }

    private bool DialogVisible { get; set; }

    private void OnDialogButtonClick(bool result)
    {
        DialogVisible = false;
    }

    private async Task OnDialogFactoryButtonClick()
    {
        if (TelerikDialogs != null)
        {
            await TelerikDialogs.AlertAsync("Telerik Alert", "DialogFactory Alert");
        }
    }
}

@page "/drawer"

<TelerikButton OnClick="@ToggleDrawer" Icon="@SvgIcon.Menu"></TelerikButton>

<TelerikDrawer @ref="@MyDrawer" Data="@Data" MiniMode="true" Mode="@DrawerMode.Push" @bind-Expanded="@Expanded">
    <DrawerContent>
        Current drawer state:
        <strong>@(Expanded ? "Expanded" : "Mini")</strong>
    </DrawerContent>
</TelerikDrawer>

@code {
    private TelerikDrawer<DrawerItem> MyDrawer { get; set; } = null!;

    private bool Expanded { get; set; }

    private IEnumerable<DrawerItem> Data { get; set; } = new List<DrawerItem> {
        new DrawerItem { Text = "Inbox", Icon = SvgIcon.Inbox },
        new DrawerItem { Separator = true},
        new DrawerItem { Text = "Notifications", Icon = SvgIcon.Bell },
        new DrawerItem { Text = "Calendar", Icon = SvgIcon.Calendar },
        new DrawerItem { Separator = true},
        new DrawerItem { Text = "Attachments", Icon = SvgIcon.EnvelopeLink },
        new DrawerItem { Text = "Favourites", Icon = SvgIcon.StarOutline }
    };

    private async Task ToggleDrawer() => await MyDrawer.ToggleAsync();

    public class DrawerItem
    {
        public string Text { get; set; } = string.Empty;

        public object? Icon { get; set; }

        public bool Separator { get; set; }
    }
}



@code {
    private List<int> SelectedIds { get; set; } = new();

    private List<Employee> Employees { get; set; } = new();

    protected override void OnInitialized()
    {
        for (int i = 1; i <= 96; i++)
        {
            Employees.Add(new Employee()
            {
                Id = i,
                FirstName = $"{Letter(true)}{Vowel()}{Letter()}{Letter()}{Vowel()}{Letter()} {i}",
                LastName = $"{Letter(true)}{Vowel()}{Letter()}{Letter()}{Vowel()}{Letter()} {i}"
            });
        }

        base.OnInitialized();
    }

    private List<string> Vowels => new List<string>() { "a", "e", "i", "o", "u", "y" };

    private string Word(int minLenth = 3, int maxLength = 7)
    {
        var result = "";
        var wordLength = Random.Shared.Next(minLenth, maxLength);

        result += Letter(true);

        for (int i = 1; i <= wordLength; i++)
        {
            result += Letter();
        }

        return "";
    }

    private string Vowel()
    {
        return Vowels.ElementAt(Random.Shared.Next(0, Vowels.Count));
    }

    private string Letter(bool upperCase = false)
    {
        var minAsciiCode = upperCase ? 65 : 97;
        var maxAsciiCode = upperCase ? 91 : 122;

        return ((char)Random.Shared.Next(minAsciiCode, maxAsciiCode)).ToString();
    }

    public class Employee
    {
        public int Id { get; set; }
        public string FirstName { get; set; } = string.Empty;
        public string LastName { get; set; } = string.Empty;
    }
}
